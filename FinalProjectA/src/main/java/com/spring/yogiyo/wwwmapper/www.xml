<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #28. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="www">
   
   <!-- === #47. 로그인 처리하기 === -->
   <select id="getLoginMember" parameterType="HashMap" resultType="com.spring.member.model.MemberVO"> <!-- MemberVO가 리턴이라 set을 찾아서 넘겨주기때문에 as를 마음대로쓰면안된다 -->
      select idx,email,pwd,name,tel
           , trunc( months_between(sysdate, lastLoginDate) ) AS lastlogindategap 
               , trunc( months_between(sysdate, lastpwdchangdate) ) AS pwdchangegap
         from tbl_member
         where status = 1 and
               email = #{email} and
               pwd = #{pwd}  
   </select>
   <update id="setLastLoginDate" parameterType="HashMap">
      update tbl_member set lastLoginDate = sysdate
      where email = #{email}
   </update>
   
   <!-- 회원가입 -->
   <insert id="RegisterMember" parameterType="String"> 
      insert into tbl_Member (idx, email, pwd, name, tel) values (seq_tbl_member.nextval, #{email}, #{pwd}, #{name}, #{tel}) 
   </insert>

   <!-- 이메일중복 -->
   <select id="selectUserID" parameterType="String" resultType="int">
      SELECT COUNT(*) as RESULT
      FROM tbl_member
      WHERE email = #{email}
   </select>
   
   <!-- 회원정보 수정 -->
   <update id="edit" parameterType="com.spring.member.model.MemberVO">
      update tbl_member set name = #{name} ,pwd = #{pwd}, lastpwdchangdate = sysdate, tel = #{tel}
      where idx = #{idx}
   </update>
   
   <!-- 비밀번호 찾기 -->
   <select id="pwdSearch" parameterType="HashMap" resultType="int">
        select count(*)
     from tbl_member
     where email = #{email} and tel = #{tel}
   </select>

   
</mapper>