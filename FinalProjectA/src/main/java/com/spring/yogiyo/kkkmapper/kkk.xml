<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #28. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="kkk">

	<!-- 매장가져오기 --> <!-- 손혜현 보여주기 수정 -->
	<select id="getShopList"
		resultType="com.spring.yogiyo.ooomodel.oooVO" parameterType="HashMap">
		select RNO, masterno, shopname, shopcategorycode, addr, addr2, wdo,
		kdo, shoptel, shopimage, shoptime, minprice, paymethod, sanghoname,
		wonsanji, DISTANCE
		from
		(
		select rownum as RNO, masterno, shopname, shopcategorycode, addr, addr2,
		wdo, kdo, shoptel, shopimage, shoptime, minprice, paymethod,
		sanghoname, wonsanji, DISTANCE
		from
		(
		select masterno, shopname, shopcategorycode, addr, addr2, wdo, kdo, shoptel,
		shopimage, shoptime, minprice, paymethod, sanghoname, wonsanji
		, DISTNACE_WGS84(#{latitude}, #{longitude}, WDO, KDO) as DISTANCE
		from tbl_shop
		where (WDO between (#{latitude}-0.022) and (#{latitude}+0.022))
		and (KDO between (#{longitude}-0.022) and (#{longitude}+0.022))
		<if test='shopcategorycode != "0"'>
			and shopcategorycode = #{shopcategorycode}
		</if>
		)V
		)T
		where RNO between #{cnt} and (#{cnt}+4)
	</select>
	<!-- 손혜현 보여주기 수정 -->

	<!-- 매장하나정보 가지고오기 -->
	<select id="getShopView" parameterType="String"
		resultType="com.spring.yogiyo.ooomodel.oooVO">
		select masterno, shopname, shopcategorycode, addr, addr2,
		wdo, kdo, shoptel, shopimage, shoptime, minprice, paymethod,
		sanghoname, wonsanji
		from tbl_shop
		where masterno = #{masterno}
	</select>

	<!-- // 메뉴카테고리 가져오기 -->
	<resultMap type="HashMap" id="MenucategoryMap">
		<result property="menuspeccode" column="menuspeccode"
			javaType="String" />
		<result property="menuspecname" column="menuspecname"
			javaType="String" />
	</resultMap>

	<select id="getMenucategoryList" resultMap="MenucategoryMap">
		select menuspeccode,
		menuspecname
		from TBL_MENUSPEC
	</select>

	<!-- // 리스트별 메뉴 가져오기 -->
	<resultMap type="HashMap" id="MenuMap">
		<result property="menucode" column="menucode" javaType="String" />
		<result property="masterno" column="masterno" javaType="String" />
		<result property="menuname" column="menuname" javaType="String" />
		<result property="menuprice" column="menuprice"
			javaType="String" />
		<result property="filename" column="filename" javaType="String" />
		<result property="pop_menuspeccode" column="pop_menuspeccode"
			javaType="String" />
	</resultMap>

	<select id="getMenuList" resultMap="MenuMap"
		parameterType="HashMap">
		select menucode, masterno, menuname, menuprice,
		filename, pop_menuspeccode
		from tbl_menuspec s left join tbl_menu m
		on s.menuspeccode = m.fk_menuspeccode
		where menuspeccode = #{code}
		and masterno = #{masterno}
	</select>

	<!-- // 장바구니에 insert 하기 전 이미 존재하는것인지 체크하기 -->
	<select id="cartSelect" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_cart
		where masterno = #{masterno}
		and menucode = #{menucode}
		and email = #{email}
	</select>
	<!-- // 장바구니에 insert 해주기 -->
	<insert id="cartInsert" parameterType="HashMap">
		insert into
		tbl_cart(orderno,masterno,menucode,menuname,menuqty,menuprice,email)
		values(seq_tbl_cart_orderno.nextval,#{masterno},#{menucode},#{menuname},#{menuqty},#{menuprice},#{email})
	</insert>

	<!-- // 장바구니에 delete 해주기 -->
	<delete id="delMenu" parameterType="String">
		delete from tbl_cart where
		orderno = #{orderno}
	</delete>

	<!-- // 로그인된 email 에 해당하는 cart테이블정도 select 해오기 -->
	<resultMap type="HashMap" id="cartMap">
		<result property="orderno" column="orderno" javaType="String" />
		<result property="masterno" column="masterno" javaType="String" />
		<result property="menucode" column="menucode" javaType="String" />
		<result property="menuname" column="menuname" javaType="String" />
		<result property="menuqty" column="menuqty" javaType="String" />
		<result property="menuprice" column="menuprice"
			javaType="String" />
		<result property="shopname" column="shopname" javaType="String" />
		<result property="shopimage" column="shopimage"
			javaType="String" />
		<result property="filename" column="filename" javaType="String" />
	</resultMap>
	<select id="selectCartList" parameterType="String"
		resultMap="cartMap">
		select orderno,v.masterno as masterno,v.menucode as
		menucode,v.menuname as menuname,v.menuqty as menuqty,v.menuprice as
		menuprice,shopname,shopimage,m.filename as filename , v.email as email
		from
		(
		select orderno,c.masterno as
		masterno,menucode,menuname,menuqty,menuprice,s.shopname as
		shopname,s.shopimage as shopimage, c.email as email
		from tbl_cart c join tbl_shop s
		on c.masterno = s.masterno
		)v join tbl_menu m
		on v.menucode = m.menucode
		where email = #{email}
	</select>

	<!-- // 타음식점 추가 불가 기능 -->
	<select id="getCartMasterno" resultType="String">
		select masterno
		from
		(
		select rownum as RNO, masterno
		from TBL_CART
		where email = #{email}
		)V
		where RNO = 1
	</select>


	<!-- dl지훈 -->
	<resultMap type="HashMap" id="shopInfo">
		<result property="shopname" column="shopname" javaType="String" />
		<result property="minprice" column="minprice" javaType="String" />
		<result property="paymethod" column="paymethod"
			javaType="String" />
		<result property="sanghoname" column="sanghoname"
			javaType="String" />
		<result property="masterno" column="masterno" javaType="String" />
		<result property="wonsanji" column="wonsanji" javaType="String" />
		<result property="shoptime" column="shoptime" javaType="String" />
	</resultMap>

	<select id="getShopInfo" resultType="HashMap"
		resultMap="shopInfo">
		select shopname, minprice, paymethod, sanghoname, masterno, wonsanji,
		shoptime
		from tbl_shop
		where masterno = #{masterno}
	</select>
	<!-- dl지훈 -->

	<!-- 명훈,선규 -->
	<select id="getStarpointAvg" resultType="double"
		parameterType="com.spring.yogiyo.ooomodel.oooVO">
		select nvl(trunc(sum(starpoint)/count(*),1),0)
		from tbl_review
		where fk_masterno = #{masterno}
	</select>

	<select id="getReviewCount" resultType="int"
		parameterType="com.spring.yogiyo.ooomodel.oooVO">
		select count(*)
		from tbl_review
		where fk_masterno = #{masterno}
	</select>


	<resultMap type="HashMap" id="reviewMap">
		<result property="reviewno" column="reviewno" javaType="String" />
		<result property="fk_masterno" column="fk_masterno"
			javaType="String" />
		<result property="fk_menucode" column="fk_menucode"
			javaType="String" />
		<result property="starpoint" column="starpoint"
			javaType="String" />
		<result property="image" column="image" javaType="String" />
		<result property="comments" column="comments" javaType="String" />
		<result property="reviewRegDate" column="reviewRegDate"
			javaType="String" />
		<result property="email" column="email" javaType="String" />
		<result property="menuname" column="menuname" javaType="String" />
	</resultMap>

	<select id="getReviewCount1" parameterType="String"
		resultType="int">
		select count(*)
		from tbl_review
		where fk_masterno = #{masterno}
	</select>


	<select id="getReviewList" parameterType="String"
		resultMap="reviewMap">
		select R.reviewno as reviewno, R.fk_masterno as fk_masterno,
		R.fk_menucode as fk_menucode, R.starpoint as starpoint, R.image as
		image, R.comments as comments, to_char(R.reviewRegDate, 'yyyy-mm-dd')
		as reviewRegDate
		, R.email as email  <!-- , N.menuname as menuname -->
		from tbl_review R
		where R.fk_masterno = #{masterno}
		order by reviewno desc
	</select>

	<insert id="addReview" parameterType="HashMap">
		insert into tbl_review(reviewno, fk_masterno, fk_menucode, image, starpoint,
		comments, reviewRegDate, email, filename, orgfilename, filesize)
		values(seq_tbl_review_reviewno.nextval, #{fk_masterno}, '61',
		#{image}, #{starpoint}, #{comments}, default, #{email}, #{filename},
		#{orgfilename}, #{filesize} )
	</insert>

	<resultMap type="HashMap" id="checkMap">
		<result property="paymenuname" column="paymenuname"
			javaType="String" />
		<result property="payno" column="payno" javaType="String" />

	</resultMap>

	<select id="checkOrderStatus" parameterType="HashMap"
		resultMap="checkMap">
		select paymenuname, payno
		from tbl_payment
		where status = 1 and masterno = #{masterno} and email = #{loginuserEmail}
	</select>
	<!-- 명훈,선규 -->

	<!-- // 별점이랑 리뷰갯수 업데이트 해주기 -->
	<update id="updateStarpAndReviewc" parameterType="HashMap">
		update TBL_SHOP set starpointsum = #{starpointAvg} , reviewcount =
		#{reviewCount}
		where masterno = #{masterno}
	</update>
	
	
	
	
   <!-- ===== 손혜현 게시판 시작 ==== -->
   
   <!-- 검색조건이 없을 경우의 총 게시물 건수(totalCount) -->
      <select id="getKKKTotalCountWithNOsearch" resultType="int">
         select count(*)
      from KKKBoard
      where status = 1
      </select>
            
      <!-- 검색조건이 있을 경우의 총 게시물 건수(totalCount) -->
      <select id="getKKKTotalCountWithSearch" parameterType="HashMap" resultType="int">
         select count(*)
      from KKKBoard
      where status = 1 and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
      </select>
   
   <!-- 답변형 게시판에 페이징 처리한 글목록 가져오기(검색이 있든지, 검색이 없든지 다 포함한 것) 첨부파일 있는 것 -->
      <select id="KKKBoardListWithPaging" parameterType="HashMap" resultType="com.spring.yogiyo.kkkmodel.BoardVO">
         select RNO,
              seq, fk_userid, name, subject, readCount, regDate, commentCount, 
              groupno, fk_seq, depthno, 
              fileName, orgFilename, fileSize
      from
      (
         select rownum as RNO,
                 seq, fk_userid, name, subject, readCount, regDate, commentCount, 
                 groupno, fk_seq, depthno, 
                 fileName, orgFilename, fileSize
         from
         (
               select rownum, seq, fk_userid, name, subject, readCount, to_char(regDate, 'yyyy-mm-dd') AS regDate,
                     commentCount,
                     groupno, fk_seq, depthno,
                     fileName, orgFilename, fileSize
            from KKKBoard
            where status = 1
           <if test='searchWord != ""'>
             and ${searchType} like '%'|| #{searchWord} ||'%'
           </if>
              start with fk_seq = 0
              connect by prior seq = fk_seq              
             order siblings by groupno desc, seq asc
             
           )V
      )T
      where RNO between #{startRno} and #{endRno}
      </select>
   
   
   <!-- #129. 답변형 게시판의 글쓰기 (파일첨부가 없는 글쓰기) -->
   <insert id="KKKadd" parameterType="com.spring.yogiyo.kkkmodel.BoardVO" > 
        <!-- 원글이라면 -->
     <if test='fk_seq == "" '> <!-- "" 은 공백이 아니다 null도 아니다 그냥 값이 없는 것이다. 웹에선 null을 하면 글자 그대로 나온다. -->   
         insert into KKKBoard (seq, fk_userid, name, subject, content, pw, readCount, regdate, status, groupno, fk_seq, depthno)
         values(KKKBoardSeq.nextval,#{fk_userid},#{name},#{subject},#{content},#{pw},default,default,default, #{groupno}, default, default)
      </if>
      
      <!-- 원글이 아니라면(답변글) -->
     <if test='fk_seq != "" '>   
         insert into KKKBoard (seq, fk_userid, name, subject, content, pw, readCount, regdate, status, groupno, fk_seq, depthno)
         values(KKKBoardSeq.nextval,#{fk_userid},#{name},#{subject},#{content},#{pw},default,default,default, #{groupno}, #{fk_seq}, #{depthno}+1)
      </if>
   </insert> 
   
   
   <!-- #141. 답변형 게시판의 글쓰기 (파일첨부가 있는 글쓰기)  -->
   <insert id="KKKadd_withFile" parameterType="com.spring.yogiyo.kkkmodel.BoardVO" >
        <!-- 원글이라면 -->
     <if test='fk_seq == "" '> <!-- "" 은 공백이 아니다 null도 아니다 그냥 값이 없는 것이다. 웹에선 null을 하면 글자 그대로 나온다. -->   
         insert into KKKBoard (seq, fk_userid, name, subject, content, pw, readCount, regdate, status, groupno, fk_seq, depthno, fileName, orgFilename, fileSize)
         values(KKKBoardSeq.nextval,#{fk_userid},#{name},#{subject},#{content},#{pw},default,default,default, #{groupno}, default, default, #{fileName}, #{orgFilename}, #{fileSize})
      </if>
      
      <!-- 원글이 아니라면(답변글) -->
     <if test='fk_seq != "" '>   
         insert into KKKBoard (seq, fk_userid, name, subject, content, pw, readCount, regdate, status, groupno, fk_seq, depthno, fileName, orgFilename, fileSize)
         values(KKKBoardSeq.nextval,#{fk_userid},#{name},#{subject},#{content},#{pw},default,default,default, #{groupno}, #{fk_seq}, #{depthno}+1, #{fileName}, #{orgFilename}, #{fileSize})
      </if>
   </insert>
   
   
   <!-- 검색어 입력시 자동 글 완성하기  -->
      <select id="KKKwordSearchShow" parameterType="HashMap" resultType="String">
         select ${searchType}
      from KKKBoard
      where lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
      </select>
   
   <!-- #128.tblBoard 테이블에서 groupno 컬럼의 최대값 구하기 -->
      <select id="getKKKGroupnoMax" resultType="int">
         select nvl(max(groupno), 0)
         from KKKBoard
      </select>
   
   <!--  글 1개 보여주기 (댓글쓰기 및 답변형 게시판) 첨부파일 있는 것   -->
   <select id="getKKKView" parameterType="String" resultType="com.spring.yogiyo.kkkmodel.BoardVO">
      select previousseq, previoussubject, seq, fk_userid, name, subject, content, readCount, regDate, nextseq, nextsubject , commentCount
             , groupno, fk_seq, depthno, fileName, orgFilename, fileSize 
      from 
      (
          select lag(seq, 1) over(order by seq desc ) as previousseq
               , lag(subject, 1) over(order by seq desc ) as previoussubject
               , seq, fk_userid, name, subject, content, readCount , to_char(regDate, 'yyyy-mm-dd') as regDate
               , lead(seq, 1) over(order by seq desc ) as nextseq
               , lead(subject, 1) over(order by seq desc) as nextsubject
               , commentCount
               , groupno
               , fk_seq
               , depthno
            , fileName, orgFilename, fileSize             
          from KKKBoard
          where status = 1
      )V
      where V.seq = #{seq}
   </select>
   
   <!-- #66. 글 조회수 1증가 하기 -->
   <update id="setKKKAddReadCount" parameterType="String" >
      update KKKBoard set readCount = readCount + 1
      where status = 1 and seq = #{seq}
   </update>
   
   <!-- #74. 글수정 및 글삭제시 암호일치 여부 알아보기 -->
   <select id="checkPWKKK" resultType="int" parameterType="com.spring.yogiyo.kkkmodel.BoardVO">
      select count(*) 
      from KKKBoard
      where seq = #{seq} and pw = #{pw}
   </select>
   
   <!-- #76. 글 1개 수정하기 -->
   <update id="updateKKKBoard" parameterType="com.spring.yogiyo.kkkmodel.BoardVO">
      update KKKBoard set subject = #{subject} , content = #{content}, regDate = sysdate
      where seq = #{seq}      
   </update>
   
   <!-- #.81 글 1개 삭제하기 -->
   <update id="deleteKKKBoard" parameterType="com.spring.yogiyo.kkkmodel.BoardVO">
      update KKKBoard set status = 0
      where seq = #{seq}      
   </update>
   
   <!-- #89. 댓글쓰기 (KKKBoardComment 테이블에 insert)-->
   <insert id="addKKKComment" parameterType="com.spring.yogiyo.kkkmodel.CommentVO">
       insert into KKKBoardComment(seq, fk_userid, name, content, regDate, parentSeq, status)
        values(KKKCommentSeq.nextval, #{fk_userid}, #{name}, #{content}, default, #{parentSeq}, default)
    </insert>


   <!-- #90. KKKBoard테이블에 commentBount 컬럼의 값을 1증가(update)-->
   <update id="updateKKKCommentCount" parameterType="String">
       update KKKBoard set commentCount = commentCount + 1 
       where seq = #{parentSeq}
    </update>
    
    <!-- #90. 원 게시물에 딸린 댓글 불러오기 -->
    <select id="getKKKCommentList" parameterType="String" resultType="com.spring.yogiyo.kkkmodel.CommentVO">
       select name, content, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate 
       from KKKBoardComment
       where parentSeq = #{parentSeq}
       order by seq desc
    </select>
    
    <!-- #95.원게시물에 딸린 모든 댓글 삭제하기 -->
    <delete id="deleteKKKComment" parameterType="String">
       delete from KKKBoardComment where parentSeq = #{seq}
    </delete>

</mapper>