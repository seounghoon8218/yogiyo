<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #28. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="www">
   
   <!-- === #47. 로그인 처리하기 === -->
   <select id="getLoginMember" parameterType="HashMap" resultType="com.spring.member.model.MemberVO"> <!-- MemberVO가 리턴이라 set을 찾아서 넘겨주기때문에 as를 마음대로쓰면안된다 -->
      select idx,email,pwd,name,tel
           , trunc( months_between(sysdate, lastLoginDate) ) AS lastlogindategap 
               , trunc( months_between(sysdate, lastpwdchangdate) ) AS pwdchangegap
         from tbl_member
         where status = 1 and
               email = #{email} and
               pwd = #{pwd}  
   </select>
   <update id="setLastLoginDate" parameterType="HashMap">
      update tbl_member set lastLoginDate = sysdate
      where email = #{email}
   </update>
   
   <!-- 회원가입 -->
   <insert id="RegisterMember" parameterType="String"> 
      insert into tbl_Member (idx, email, pwd, name, tel) values (seq_tbl_member.nextval, #{email}, #{pwd}, #{name}, #{tel}) 
   </insert>

   <!-- 이메일중복 -->
   <select id="selectUserID" parameterType="String" resultType="int">
      SELECT COUNT(*) as RESULT
      FROM tbl_member
      WHERE email = #{email}
   </select>
   
   <!-- 회원정보 수정 -->
   <update id="editMember" parameterType="com.spring.member.model.MemberVO">
      update tbl_member set name = #{name} ,pwd = #{pwd}, lastpwdchangdate = sysdate, tel = #{tel}
      where idx = #{idx}
   </update>
   
   <!-- 회원탈퇴 -->
   <delete id="memberDelEnd" parameterType="com.spring.member.model.MemberVO">
   	  delete from tbl_member where email = #{email} and pwd = #{pwd}
   </delete>
   
   <!-- 비밀번호 찾기 -->
   <select id="pwdSearch" parameterType="HashMap" resultType="int">
        select count(*)
     from tbl_member
     where email = #{email} and tel = #{tel}
   </select>
   <!-- 새비밀번호 만들기 -->
   <update id="newPwdEnd" parameterType="com.spring.member.model.MemberVO">
   	  update tbl_member set pwd = #{pwd}, lastpwdchangdate = sysdate
      where email = #{email}
   </update>
   
   <!--  === #112. 검색조건이 없을 경우의 총 게시물 건수(totalCount) === -->
	<select id="getTotalCountWithNOSearch" resultType="int">
		select count(*)
		from tblFreePage
		where status = 1
	</select>
	
		
	<!-- === #115. 검색조건이 있을 경우의 총 게시물 건수(totalCount) === --> 
	<select id="getTotalCountWithSearch" parameterType="HashMap" resultType="int"> 
		select count(*)
		from tblFreePage
		where status = 1
		and ${searchType} like '%'|| #{searchWord} ||'%' 
	</select> 
	
	<!--  === #142. 첨부파일이 있는 답변형 게시판의 페이징 처리한 글목록 가져오기(검색이 있든지, 없든지 다 포함한 것)
				    먼저, #130. 을 주석처리해야 함. === --> 
	<select id="boardListWithPaging" parameterType="HashMap" resultType="com.spring.yogiyo.wwwmodel.BoardVO"> 
		select seq, fk_email, name, subject, readcount, regDate, commentCount 
			  , groupno, fk_seq, depthno, 
			  fileName, orgFilename, fileSize
		from 
		(
		    select rownum AS rno
		         , seq, fk_email, name, subject, readcount, regDate, commentCount 
		         , groupno, fk_seq, depthno, 
		         fileName, orgFilename, fileSize
		    from
		    (
		        select seq, fk_email, name, subject,  
		               readcount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate,
		               commentCount,
		               groupno, fk_seq, depthno, 
		               fileName, orgFilename, fileSize
		        from tblFreePage
		        where status = 1
		     <if test='searchWord != "" '>   
		        and ${searchType} like '%'|| #{searchWord} ||'%'
		     </if>   
		     	start with fk_seq = 0
		     	connect by prior seq = fk_seq
		        order siblings by groupno desc, seq asc
	            <!-- order siblings by 를 사용하는 이유는 
	         	     그냥 정렬(order by)하면 계층구조가 깨진다.
	         	     그래서 계층구조를 그대로 유지하면서
	         	     동일한 groupno 를 가진 행들끼리 정렬을 하려면
	         	     siblings을 사용한다.-->
		    ) V
		) T
		where rno between #{startRno} and #{endRno}
	</select>
	
	<!-- === #129.답변형 게시판의 글쓰기(파일첨부가 없는 글쓰기) === 
	 		  먼저 #56.을 주석으로 한다.-->
	 <insert id="add" parameterType="com.spring.yogiyo.wwwmodel.BoardVO"> 
	 	<if test='fk_seq.equals("")' >
	 	insert into tblFreePage(seq, fk_email, name, subject, content, pw, readCount, regDate, status, groupno, fk_seq, depthno)
		values(freecommentSeq.nextval, #{fk_email}, #{name}, #{subject}, #{content}, #{pw}, default, default, default, #{groupno}, default, default)
		</if>
		
		<if test='!fk_seq.equals("")'>
	 	insert into tblFreePage(seq, fk_email, name, subject, content, pw, readCount, regDate, status, groupno, fk_seq, depthno)
		values(freecommentSeq.nextval, #{fk_email}, #{name}, #{subject}, #{content}, #{pw}, default, default, default, #{groupno}, #{fk_seq}, #{depthno}+1)
		</if>
	 </insert>
	 
	 <!-- === #141.답변형 게시판의 글쓰기(파일첨부가 있는 글쓰기) === -->
	 <insert id="add_withFile" parameterType="com.spring.yogiyo.wwwmodel.BoardVO"> 
	 	<if test='fk_seq.equals("")' >
	 	insert into tblFreePage(seq, fk_email, name, subject, content, pw, readCount, regDate, status, groupno, fk_seq, depthno, fileName, orgFilename, fileSize)
		values(freecommentSeq.nextval, #{fk_email}, #{name}, #{subject}, #{content}, #{pw}, default, default, default, #{groupno}, default, default, #{fileName}, #{orgFilename}, #{fileSize})
		</if>
		
		<if test='!fk_seq.equals("")'>
	 	insert into tblFreePage(seq, fk_email, name, subject, content, pw, readCount, regDate, status, groupno, fk_seq, depthno, fileName, orgFilename, fileSize)
		values(freecommentSeq.nextval, #{fk_email}, #{name}, #{subject}, #{content}, #{pw}, default, default, default, #{groupno}, #{fk_seq}, #{depthno}+1, #{fileName}, #{orgFilename}, #{fileSize})
		</if>
	 </insert>
	
	<!-- === #128. tblBoard 테이블에서 grouppno 컬럼의 최대값 구하기 ===  -->
	<select id="getGroupnoMax" resultType="int">
		select nvl(max(groupno), 0)
		from tblFreePage
	</select>
	
	<!-- === #100. 페이징 처리를 안한 검색어가 있는 전체 글목록 보여주기 === -->
	 <select id="boardListSearch" resultType="com.spring.yogiyo.wwwmodel.BoardVO" parameterType="HashMap">
		 select seq, fk_email, name, subject,  
		        readcount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate,
		        commentCount
		 from tblFreePage
		 where status = 1
		 <if test='searchWord != "" '>
		     and ${searchType} like '%'|| #{searchWord} ||'%'
		 </if>
		 order by seq desc
	 </select>
	
	<!-- === #145. 글 1개 보여주기(댓글쓰기 및 답변형 첨부파일이 있는 게시판) === 
	            먼저 위의  #122. 을 주석처리 한다. -->
	 <select id="getView" parameterType="String" resultType="com.spring.yogiyo.wwwmodel.BoardVO">
	 	select previousseq, previoussubject, 
		       seq, fk_email, name, subject, content, readCount, regDate,
		       nextseq, nextsubject 
		     , commentCount
		     , groupno, fk_seq, depthno
		     , fileName, orgFilename, fileSize
		from 
		(
		    select lag(seq, 1) over(order by seq desc) as previousseq
		         , lag(subject, 1) over(order by seq desc) as previoussubject
		         , seq, fk_email, name, subject, content
		         , readCount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		         , lead(seq, 1) over(order by seq desc) as nextseq
		         , lead(subject, 1) over(order by seq desc) as nextsubject
		         , commentCount
		         , groupno, fk_seq, depthno
		         , fileName, orgFilename, fileSize
		    from tblFreePage
		    where status = 1
		) V
		where V.seq = #{seq}
	 </select>
	 
	 
	 
	 <!-- === #66. 글 조회수 1증가 하기 === --> 
	 <update id="setAddReadCount" parameterType="String">
	 	update tblFreePage set readCount = readCount + 1 
	 	where status = 1 and seq = #{seq}
	 </update>
	 	 
	 
	 <!-- === #74. 글수정 및 글삭제시 암호일치 여부 알아오기 === --> 
	 <select id="checkPW" parameterType="com.spring.yogiyo.wwwmodel.BoardVO" resultType="int"> 
	 	select count(*)
		from tblFreePage
		where seq = #{seq} and pw = #{pw}
	 </select>
	 
	 
	 <!-- === #76. 글 1개를 수정한다. === -->
	 <update id="updateBoard" parameterType="com.spring.yogiyo.wwwmodel.BoardVO">
	 	update tblFreePage set subject = #{subject}
	 	                  , content = #{content}
	 	                  , regdate = sysdate 
	 	where seq = #{seq}
	 </update>
	 
	 
	 <!-- === #81. 1개글 삭제하기(우리는 update 로 처리하겠다) === -->
	 <update id="deleteBoard" parameterType="com.spring.yogiyo.wwwmodel.BoardVO">
	 	update tblFreePage set status = 0
	 	where seq = #{seq}
	 </update>
	 
	 <!--  === #89. 댓글쓰기(tblComment 테이블에 insert) === -->
	 <insert id="addComment" parameterType="com.spring.yogiyo.wwwmodel.CommentVO">
    	insert into tblFreeComment(seq, fk_email, name, content, regDate, parentSeq, status)
        values(commentSeq.nextval, #{fk_email}, #{name}, #{content}, default, #{parentSeq}, default)
    </insert>
	 
	 <!--  === #90. tblBoard 테이블에 commentCount 컬럼의 값을 1증가(update) === -->  
	 <update id="updateCommentCount" parameterType="String">
    	update tblFreePage set commentCount = commentCount + 1 
    	where seq = #{parentSeq}
    </update>
    
     <!-- === #90. 원게시물에 딸린 댓글보여주기 === -->
     <select id="getCommentList" parameterType="String" resultType="com.spring.yogiyo.wwwmodel.CommentVO"> 
     	select name, content, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate 
     	from tblFreeComment
     	where parentSeq = #{parentSeq}
     	order by seq desc
     </select>
     
     <!--  === #95. 원게시물에 딸린 모든 댓글들을 삭제하도록 한다. === -->
     <delete id="deleteComment" parameterType="String">
     	delete from tblFreeComment
        where parentSeq = #{seq} 
     </delete>
	 
	 
	 <!--  === #106. 검색어 입력시 자동글 완성하기 6 === --> 
	 <select id="wordSearchShow" parameterType="HashMap" resultType="String"> 
		 select ${searchType}
		 from tblFreePage
		 where lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
	 </select>
   
</mapper>